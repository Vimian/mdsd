/*
 * generated by Xtext 2.33.0
 */
grammar InternalUi;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.mmmi.mdsd.services.UiGrammarAccess;

}

@parser::members {

 	private UiGrammarAccess grammarAccess;

    public InternalUiParser(TokenStream input, UiGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "UI23";
   	}

   	@Override
   	protected UiGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleUI23
entryRuleUI23 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUI23Rule()); }
	iv_ruleUI23=ruleUI23
	{ $current=$iv_ruleUI23.current; }
	EOF;

// Rule UI23
ruleUI23 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='title'
		{
			newLeafNode(otherlv_0, grammarAccess.getUI23Access().getTitleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUI23Access().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUI23Rule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUI23Access().getFormFormParserRuleCall_2_0());
				}
				lv_form_2_0=ruleForm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUI23Rule());
					}
					set(
						$current,
						"form",
						lv_form_2_0,
						"dk.sdu.mmmi.mdsd.Ui.Form");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForm
entryRuleForm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormRule()); }
	iv_ruleForm=ruleForm
	{ $current=$iv_ruleForm.current; }
	EOF;

// Rule Form
ruleForm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='form'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormAccess().getFormKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_3_0());
				}
				lv_layout_3_0=ruleLayout
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormRule());
					}
					set(
						$current,
						"layout",
						lv_layout_3_0,
						"dk.sdu.mmmi.mdsd.Ui.Layout");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFormAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLayout
entryRuleLayout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayoutRule()); }
	iv_ruleLayout=ruleLayout
	{ $current=$iv_ruleLayout.current; }
	EOF;

// Rule Layout
ruleLayout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLayoutAccess().getColumnParserRuleCall_0());
		}
		this_Column_0=ruleColumn
		{
			$current = $this_Column_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLayoutAccess().getRowParserRuleCall_1());
		}
		this_Row_1=ruleRow
		{
			$current = $this_Row_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	iv_ruleColumn=ruleColumn
	{ $current=$iv_ruleColumn.current; }
	EOF;

// Rule Column
ruleColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='column'
		{
			newLeafNode(otherlv_0, grammarAccess.getColumnAccess().getColumnKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColumnAccess().getElementsElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColumnRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"dk.sdu.mmmi.mdsd.Ui.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='row'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowAccess().getRowKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowAccess().getElementsElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"dk.sdu.mmmi.mdsd.Ui.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getRowAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getLabelParserRuleCall_0());
		}
		this_Label_0=ruleLabel
		{
			$current = $this_Label_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getInputParserRuleCall_1());
		}
		this_Input_1=ruleInput
		{
			$current = $this_Input_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getButtonParserRuleCall_2());
		}
		this_Button_2=ruleButton
		{
			$current = $this_Button_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getLayoutParserRuleCall_3());
		}
		this_Layout_3=ruleLayout
		{
			$current = $this_Layout_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='label'
		{
			newLeafNode(otherlv_0, grammarAccess.getLabelAccess().getLabelKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getLabelAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLabelRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputAccess().getInputKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getInputAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputAccess().getExpExpParserRuleCall_3_0());
				}
				lv_exp_3_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputRule());
					}
					set(
						$current,
						"exp",
						lv_exp_3_0,
						"dk.sdu.mmmi.mdsd.Ui.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	iv_ruleButton=ruleButton
	{ $current=$iv_ruleButton.current; }
	EOF;

// Rule Button
ruleButton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='button'
			{
				newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getButtonRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getButtonAccess().getColonKeyword_0_2());
			}
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getButtonRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getButtonAccess().getStarButtonAction_1_0(),
						$current);
				}
			)
			otherlv_5='button*'
			{
				newLeafNode(otherlv_5, grammarAccess.getButtonAccess().getButtonKeyword_1_1());
			}
			(
				(
					lv_name_6_0=RULE_ID
					{
						newLeafNode(lv_name_6_0, grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getButtonRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getButtonAccess().getColonKeyword_1_3());
			}
			(
				(
					lv_value_8_0=RULE_STRING
					{
						newLeafNode(lv_value_8_0, grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getButtonRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeAccess().getStringTypeAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0='string'
					{
						newLeafNode(lv_value_1_0, grammarAccess.getTypeAccess().getValueStringKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_0, "string");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeAccess().getHashStringTypeAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0='#string'
					{
						newLeafNode(lv_value_3_0, grammarAccess.getTypeAccess().getValueStringKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "value", lv_value_3_0, "#string");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeAccess().getNumberTypeAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0='number'
					{
						newLeafNode(lv_value_5_0, grammarAccess.getTypeAccess().getValueNumberKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "value", lv_value_5_0, "number");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpAccess().getBooleanExpParserRuleCall());
	}
	this_BooleanExp_0=ruleBooleanExp
	{
		$current = $this_BooleanExp_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBooleanExp
entryRuleBooleanExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpRule()); }
	iv_ruleBooleanExp=ruleBooleanExp
	{ $current=$iv_ruleBooleanExp.current; }
	EOF;

// Rule BooleanExp
ruleBooleanExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getEqualityExpParserRuleCall_0());
		}
		this_EqualityExp_0=ruleEqualityExp
		{
			$current = $this_EqualityExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getBooleanExpAccess().getAndLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='&&'
				{
					newLeafNode(otherlv_2, grammarAccess.getBooleanExpAccess().getAmpersandAmpersandKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBooleanExpAccess().getRightEqualityExpParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleEqualityExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBooleanExpRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"dk.sdu.mmmi.mdsd.Ui.EqualityExp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getBooleanExpAccess().getOrLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='||'
				{
					newLeafNode(otherlv_5, grammarAccess.getBooleanExpAccess().getVerticalLineVerticalLineKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBooleanExpAccess().getRightEqualityExpParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleEqualityExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBooleanExpRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"dk.sdu.mmmi.mdsd.Ui.EqualityExp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExp
entryRuleEqualityExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpRule()); }
	iv_ruleEqualityExp=ruleEqualityExp
	{ $current=$iv_ruleEqualityExp.current; }
	EOF;

// Rule EqualityExp
ruleEqualityExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpAccess().getLessGreaterExpParserRuleCall_0());
		}
		this_LessGreaterExp_0=ruleLessGreaterExp
		{
			$current = $this_LessGreaterExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getEqualityExpAccess().getEqualsLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='=='
				{
					newLeafNode(otherlv_2, grammarAccess.getEqualityExpAccess().getEqualsSignEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEqualityExpAccess().getRightLessGreaterExpParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleLessGreaterExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEqualityExpRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"dk.sdu.mmmi.mdsd.Ui.LessGreaterExp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getEqualityExpAccess().getNotEqualLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='!='
				{
					newLeafNode(otherlv_5, grammarAccess.getEqualityExpAccess().getExclamationMarkEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEqualityExpAccess().getRightLessGreaterExpParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleLessGreaterExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEqualityExpRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"dk.sdu.mmmi.mdsd.Ui.LessGreaterExp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleLessGreaterExp
entryRuleLessGreaterExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLessGreaterExpRule()); }
	iv_ruleLessGreaterExp=ruleLessGreaterExp
	{ $current=$iv_ruleLessGreaterExp.current; }
	EOF;

// Rule LessGreaterExp
ruleLessGreaterExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLessGreaterExpAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLessGreaterExpAccess().getLessLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='<'
				{
					newLeafNode(otherlv_2, grammarAccess.getLessGreaterExpAccess().getLessThanSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=rulePrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLessGreaterExpRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"dk.sdu.mmmi.mdsd.Ui.Primary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLessGreaterExpAccess().getLessOrEqualLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='<='
				{
					newLeafNode(otherlv_5, grammarAccess.getLessGreaterExpAccess().getLessThanSignEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=rulePrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLessGreaterExpRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"dk.sdu.mmmi.mdsd.Ui.Primary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLessGreaterExpAccess().getGreaterLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_8='>'
				{
					newLeafNode(otherlv_8, grammarAccess.getLessGreaterExpAccess().getGreaterThanSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=rulePrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLessGreaterExpRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"dk.sdu.mmmi.mdsd.Ui.Primary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLessGreaterExpAccess().getGreaterOrEqualLeftAction_1_3_0(),
							$current);
					}
				)
				otherlv_11='>='
				{
					newLeafNode(otherlv_11, grammarAccess.getLessGreaterExpAccess().getGreaterThanSignEqualsSignKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_3_2_0());
						}
						lv_right_12_0=rulePrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLessGreaterExpRule());
							}
							set(
								$current,
								"right",
								lv_right_12_0,
								"dk.sdu.mmmi.mdsd.Ui.Primary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNumberAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"dk.sdu.mmmi.mdsd.Ui.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getInputUseParserRuleCall_2());
		}
		this_InputUse_3=ruleInputUse
		{
			$current = $this_InputUse_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInputUse
entryRuleInputUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputUseRule()); }
	iv_ruleInputUse=ruleInputUse
	{ $current=$iv_ruleInputUse.current; }
	EOF;

// Rule InputUse
ruleInputUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInputUseRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getInputUseAccess().getRefInputCrossReference_0());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
