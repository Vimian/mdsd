/*
 * generated by Xtext 2.33.0
 */
grammar InternalUi;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.mdsd.services.UiGrammarAccess;

}
@parser::members {
	private UiGrammarAccess grammarAccess;

	public void setGrammarAccess(UiGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUI23
entryRuleUI23
:
{ before(grammarAccess.getUI23Rule()); }
	 ruleUI23
{ after(grammarAccess.getUI23Rule()); } 
	 EOF 
;

// Rule UI23
ruleUI23 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUI23Access().getGroup()); }
		(rule__UI23__Group__0)
		{ after(grammarAccess.getUI23Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForm
entryRuleForm
:
{ before(grammarAccess.getFormRule()); }
	 ruleForm
{ after(grammarAccess.getFormRule()); } 
	 EOF 
;

// Rule Form
ruleForm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormAccess().getGroup()); }
		(rule__Form__Group__0)
		{ after(grammarAccess.getFormAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayout
entryRuleLayout
:
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutAccess().getAlternatives()); }
		(rule__Layout__Alternatives)
		{ after(grammarAccess.getLayoutAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getGroup()); }
		(rule__Column__Group__0)
		{ after(grammarAccess.getColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getAlternatives()); }
		(rule__Button__Alternatives)
		{ after(grammarAccess.getButtonAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getBooleanExpParserRuleCall()); }
		ruleBooleanExp
		{ after(grammarAccess.getExpAccess().getBooleanExpParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExp
entryRuleBooleanExp
:
{ before(grammarAccess.getBooleanExpRule()); }
	 ruleBooleanExp
{ after(grammarAccess.getBooleanExpRule()); } 
	 EOF 
;

// Rule BooleanExp
ruleBooleanExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpAccess().getGroup()); }
		(rule__BooleanExp__Group__0)
		{ after(grammarAccess.getBooleanExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExp
entryRuleEqualityExp
:
{ before(grammarAccess.getEqualityExpRule()); }
	 ruleEqualityExp
{ after(grammarAccess.getEqualityExpRule()); } 
	 EOF 
;

// Rule EqualityExp
ruleEqualityExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpAccess().getGroup()); }
		(rule__EqualityExp__Group__0)
		{ after(grammarAccess.getEqualityExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLessGreaterExp
entryRuleLessGreaterExp
:
{ before(grammarAccess.getLessGreaterExpRule()); }
	 ruleLessGreaterExp
{ after(grammarAccess.getLessGreaterExpRule()); } 
	 EOF 
;

// Rule LessGreaterExp
ruleLessGreaterExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getGroup()); }
		(rule__LessGreaterExp__Group__0)
		{ after(grammarAccess.getLessGreaterExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputUse
entryRuleInputUse
:
{ before(grammarAccess.getInputUseRule()); }
	 ruleInputUse
{ after(grammarAccess.getInputUseRule()); } 
	 EOF 
;

// Rule InputUse
ruleInputUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputUseAccess().getRefAssignment()); }
		(rule__InputUse__RefAssignment)
		{ after(grammarAccess.getInputUseAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getColumnParserRuleCall_0()); }
		ruleColumn
		{ after(grammarAccess.getLayoutAccess().getColumnParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutAccess().getRowParserRuleCall_1()); }
		ruleRow
		{ after(grammarAccess.getLayoutAccess().getRowParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
		ruleLabel
		{ after(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getInputParserRuleCall_1()); }
		ruleInput
		{ after(grammarAccess.getElementAccess().getInputParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getButtonParserRuleCall_2()); }
		ruleButton
		{ after(grammarAccess.getElementAccess().getButtonParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLayoutParserRuleCall_3()); }
		ruleLayout
		{ after(grammarAccess.getElementAccess().getLayoutParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getGroup_0()); }
		(rule__Button__Group_0__0)
		{ after(grammarAccess.getButtonAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getButtonAccess().getGroup_1()); }
		(rule__Button__Group_1__0)
		{ after(grammarAccess.getButtonAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_1()); }
		(rule__Type__Group_1__0)
		{ after(grammarAccess.getTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getGroup_1_0()); }
		(rule__BooleanExp__Group_1_0__0)
		{ after(grammarAccess.getBooleanExpAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpAccess().getGroup_1_1()); }
		(rule__BooleanExp__Group_1_1__0)
		{ after(grammarAccess.getBooleanExpAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpAccess().getGroup_1_0()); }
		(rule__EqualityExp__Group_1_0__0)
		{ after(grammarAccess.getEqualityExpAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpAccess().getGroup_1_1()); }
		(rule__EqualityExp__Group_1_1__0)
		{ after(grammarAccess.getEqualityExpAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getGroup_1_0()); }
		(rule__LessGreaterExp__Group_1_0__0)
		{ after(grammarAccess.getLessGreaterExpAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getGroup_1_1()); }
		(rule__LessGreaterExp__Group_1_1__0)
		{ after(grammarAccess.getLessGreaterExpAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getGroup_1_2()); }
		(rule__LessGreaterExp__Group_1_2__0)
		{ after(grammarAccess.getLessGreaterExpAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getGroup_1_3()); }
		(rule__LessGreaterExp__Group_1_3__0)
		{ after(grammarAccess.getLessGreaterExpAccess().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getTypeAssignment_1()); }
		(rule__Primary__TypeAssignment_1)
		{ after(grammarAccess.getPrimaryAccess().getTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getInputUseParserRuleCall_2()); }
		ruleInputUse
		{ after(grammarAccess.getPrimaryAccess().getInputUseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI23__Group__0__Impl
	rule__UI23__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUI23Access().getTitleKeyword_0()); }
	'title'
	{ after(grammarAccess.getUI23Access().getTitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI23__Group__1__Impl
	rule__UI23__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUI23Access().getNameAssignment_1()); }
	(rule__UI23__NameAssignment_1)
	{ after(grammarAccess.getUI23Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI23__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUI23Access().getFormAssignment_2()); }
	(rule__UI23__FormAssignment_2)
	{ after(grammarAccess.getUI23Access().getFormAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__0__Impl
	rule__Form__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getFormKeyword_0()); }
	'form'
	{ after(grammarAccess.getFormAccess().getFormKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__1__Impl
	rule__Form__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getNameAssignment_1()); }
	(rule__Form__NameAssignment_1)
	{ after(grammarAccess.getFormAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__2__Impl
	rule__Form__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__3__Impl
	rule__Form__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLayoutAssignment_3()); }
	(rule__Form__LayoutAssignment_3)
	{ after(grammarAccess.getFormAccess().getLayoutAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__0__Impl
	rule__Column__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnKeyword_0()); }
	'column'
	{ after(grammarAccess.getColumnAccess().getColumnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__1__Impl
	rule__Column__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__2__Impl
	rule__Column__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getColumnAccess().getElementsAssignment_2()); }
		(rule__Column__ElementsAssignment_2)
		{ after(grammarAccess.getColumnAccess().getElementsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getColumnAccess().getElementsAssignment_2()); }
		(rule__Column__ElementsAssignment_2)*
		{ after(grammarAccess.getColumnAccess().getElementsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRowKeyword_0()); }
	'row'
	{ after(grammarAccess.getRowAccess().getRowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__2__Impl
	rule__Row__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRowAccess().getElementsAssignment_2()); }
		(rule__Row__ElementsAssignment_2)
		{ after(grammarAccess.getRowAccess().getElementsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getRowAccess().getElementsAssignment_2()); }
		(rule__Row__ElementsAssignment_2)*
		{ after(grammarAccess.getRowAccess().getElementsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
	'label'
	{ after(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabelAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getValueAssignment_2()); }
	(rule__Label__ValueAssignment_2)
	{ after(grammarAccess.getLabelAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getNameAssignment_1()); }
	(rule__Input__NameAssignment_1)
	{ after(grammarAccess.getInputAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
	rule__Input__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getInputAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getExpAssignment_3()); }
	(rule__Input__ExpAssignment_3)
	{ after(grammarAccess.getInputAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_0__0__Impl
	rule__Button__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_0_0()); }
	'button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_0__1__Impl
	rule__Button__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_0_1()); }
	(rule__Button__NameAssignment_0_1)
	{ after(grammarAccess.getButtonAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_0__2__Impl
	rule__Button__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getColonKeyword_0_2()); }
	':'
	{ after(grammarAccess.getButtonAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getValueAssignment_0_3()); }
	(rule__Button__ValueAssignment_0_3)
	{ after(grammarAccess.getButtonAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_1__0__Impl
	rule__Button__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getStarButtonAction_1_0()); }
	()
	{ after(grammarAccess.getButtonAccess().getStarButtonAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_1__1__Impl
	rule__Button__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_1_1()); }
	'button*'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_1__2__Impl
	rule__Button__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_1_2()); }
	(rule__Button__NameAssignment_1_2)
	{ after(grammarAccess.getButtonAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_1__3__Impl
	rule__Button__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getButtonAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getValueAssignment_1_4()); }
	(rule__Button__ValueAssignment_1_4)
	{ after(grammarAccess.getButtonAccess().getValueAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getStringTypeAction_0_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getStringTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getValueAssignment_0_1()); }
	(rule__Type__ValueAssignment_0_1)
	{ after(grammarAccess.getTypeAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getHashStringTypeAction_1_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getHashStringTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getValueAssignment_1_1()); }
	(rule__Type__ValueAssignment_1_1)
	{ after(grammarAccess.getTypeAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNumberTypeAction_2_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getNumberTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getValueAssignment_2_1()); }
	(rule__Type__ValueAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group__0__Impl
	rule__BooleanExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getEqualityExpParserRuleCall_0()); }
	ruleEqualityExp
	{ after(grammarAccess.getBooleanExpAccess().getEqualityExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getAlternatives_1()); }
	(rule__BooleanExp__Alternatives_1)*
	{ after(grammarAccess.getBooleanExpAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1_0__0__Impl
	rule__BooleanExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getAndLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getBooleanExpAccess().getAndLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1_0__1__Impl
	rule__BooleanExp__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getAmpersandAmpersandKeyword_1_0_1()); }
	'&&'
	{ after(grammarAccess.getBooleanExpAccess().getAmpersandAmpersandKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getRightAssignment_1_0_2()); }
	(rule__BooleanExp__RightAssignment_1_0_2)
	{ after(grammarAccess.getBooleanExpAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1_1__0__Impl
	rule__BooleanExp__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getOrLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getBooleanExpAccess().getOrLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1_1__1__Impl
	rule__BooleanExp__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getVerticalLineVerticalLineKeyword_1_1_1()); }
	'||'
	{ after(grammarAccess.getBooleanExpAccess().getVerticalLineVerticalLineKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getRightAssignment_1_1_2()); }
	(rule__BooleanExp__RightAssignment_1_1_2)
	{ after(grammarAccess.getBooleanExpAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group__0__Impl
	rule__EqualityExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getLessGreaterExpParserRuleCall_0()); }
	ruleLessGreaterExp
	{ after(grammarAccess.getEqualityExpAccess().getLessGreaterExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getAlternatives_1()); }
	(rule__EqualityExp__Alternatives_1)*
	{ after(grammarAccess.getEqualityExpAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group_1_0__0__Impl
	rule__EqualityExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getEqualsLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getEqualityExpAccess().getEqualsLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group_1_0__1__Impl
	rule__EqualityExp__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getEqualsSignEqualsSignKeyword_1_0_1()); }
	'=='
	{ after(grammarAccess.getEqualityExpAccess().getEqualsSignEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getRightAssignment_1_0_2()); }
	(rule__EqualityExp__RightAssignment_1_0_2)
	{ after(grammarAccess.getEqualityExpAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExp__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group_1_1__0__Impl
	rule__EqualityExp__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getNotEqualLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpAccess().getNotEqualLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group_1_1__1__Impl
	rule__EqualityExp__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getExclamationMarkEqualsSignKeyword_1_1_1()); }
	'!='
	{ after(grammarAccess.getEqualityExpAccess().getExclamationMarkEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExp__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpAccess().getRightAssignment_1_1_2()); }
	(rule__EqualityExp__RightAssignment_1_1_2)
	{ after(grammarAccess.getEqualityExpAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessGreaterExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group__0__Impl
	rule__LessGreaterExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getLessGreaterExpAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getAlternatives_1()); }
	(rule__LessGreaterExp__Alternatives_1)*
	{ after(grammarAccess.getLessGreaterExpAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessGreaterExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_0__0__Impl
	rule__LessGreaterExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getLessLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLessGreaterExpAccess().getLessLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_0__1__Impl
	rule__LessGreaterExp__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getLessThanSignKeyword_1_0_1()); }
	'<'
	{ after(grammarAccess.getLessGreaterExpAccess().getLessThanSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_0_2()); }
	(rule__LessGreaterExp__RightAssignment_1_0_2)
	{ after(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessGreaterExp__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_1__0__Impl
	rule__LessGreaterExp__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getLessOrEqualLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getLessGreaterExpAccess().getLessOrEqualLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_1__1__Impl
	rule__LessGreaterExp__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getLessThanSignEqualsSignKeyword_1_1_1()); }
	'<='
	{ after(grammarAccess.getLessGreaterExpAccess().getLessThanSignEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_1_2()); }
	(rule__LessGreaterExp__RightAssignment_1_1_2)
	{ after(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessGreaterExp__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_2__0__Impl
	rule__LessGreaterExp__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getGreaterLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getLessGreaterExpAccess().getGreaterLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_2__1__Impl
	rule__LessGreaterExp__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getGreaterThanSignKeyword_1_2_1()); }
	'>'
	{ after(grammarAccess.getLessGreaterExpAccess().getGreaterThanSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_2_2()); }
	(rule__LessGreaterExp__RightAssignment_1_2_2)
	{ after(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LessGreaterExp__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_3__0__Impl
	rule__LessGreaterExp__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getGreaterOrEqualLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getLessGreaterExpAccess().getGreaterOrEqualLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_3__1__Impl
	rule__LessGreaterExp__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getGreaterThanSignEqualsSignKeyword_1_3_1()); }
	'>='
	{ after(grammarAccess.getLessGreaterExpAccess().getGreaterThanSignEqualsSignKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LessGreaterExp__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_3_2()); }
	(rule__LessGreaterExp__RightAssignment_1_3_2)
	{ after(grammarAccess.getLessGreaterExpAccess().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNumberAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNumberAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueAssignment_0_1()); }
	(rule__Primary__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimaryAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UI23__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUI23Access().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUI23Access().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__FormAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUI23Access().getFormFormParserRuleCall_2_0()); }
		ruleForm
		{ after(grammarAccess.getUI23Access().getFormFormParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__LayoutAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_3_0()); }
		ruleLayout
		{ after(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getElementsElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getColumnAccess().getElementsElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getElementsElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getRowAccess().getElementsElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLabelAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInputAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getExpExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getInputAccess().getExpExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ValueAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_1_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getValueStringKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getValueStringKeyword_0_1_0()); }
			'string'
			{ after(grammarAccess.getTypeAccess().getValueStringKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getValueStringKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getValueStringKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getValueStringKeyword_1_1_0()); }
			'#string'
			{ after(grammarAccess.getTypeAccess().getValueStringKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getValueStringKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getValueNumberKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getValueNumberKeyword_2_1_0()); }
			'number'
			{ after(grammarAccess.getTypeAccess().getValueNumberKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getValueNumberKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getRightEqualityExpParserRuleCall_1_0_2_0()); }
		ruleEqualityExp
		{ after(grammarAccess.getBooleanExpAccess().getRightEqualityExpParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getRightEqualityExpParserRuleCall_1_1_2_0()); }
		ruleEqualityExp
		{ after(grammarAccess.getBooleanExpAccess().getRightEqualityExpParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpAccess().getRightLessGreaterExpParserRuleCall_1_0_2_0()); }
		ruleLessGreaterExp
		{ after(grammarAccess.getEqualityExpAccess().getRightLessGreaterExpParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExp__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpAccess().getRightLessGreaterExpParserRuleCall_1_1_2_0()); }
		ruleLessGreaterExp
		{ after(grammarAccess.getEqualityExpAccess().getRightLessGreaterExpParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_0_2_0()); }
		rulePrimary
		{ after(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_2_2_0()); }
		rulePrimary
		{ after(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LessGreaterExp__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_3_2_0()); }
		rulePrimary
		{ after(grammarAccess.getLessGreaterExpAccess().getRightPrimaryParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getPrimaryAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputUse__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputUseAccess().getRefInputCrossReference_0()); }
		(
			{ before(grammarAccess.getInputUseAccess().getRefInputIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInputUseAccess().getRefInputIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getInputUseAccess().getRefInputCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
